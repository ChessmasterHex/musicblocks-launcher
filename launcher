#!/usr/bin/python3
import gi
import os

gi.require_version('Gtk', '3.0')
gi.require_version('WebKit2', '4.0')
from gi.repository import Gtk
from gi.repository import WebKit2

WebKit2.WebView.__gtype__
WebKit2.Settings.__gtype__

MUSICBLOCKS_PATH = os.getenv('MUSICBLOCKS_PATH')
@Gtk.Template(filename=os.path.join(MUSICBLOCKS_PATH, 'org.sugarlabs.MusicBlocks.ui'))
class MyWindow(Gtk.Window):
    __gtype_name__ = "MyWindow"
    
    view = Gtk.Template.Child()
    settings = Gtk.Template.Child()
    
    def __init__(self):
        super(MyWindow, self).__init__()
        self.context = self.view.get_context()
        self.context.connect("download-started", self.on_download_started)
    
    def on_download_started(self, context, download):
        print ("Download started:", download.get_request().props.uri)
        download.connect("decide-destination", self.on_decide_destination)
        
    def on_decide_destination(self, download, suggested_filename):
        print ("Decide destination:", suggested_filename)
        
        dialog = Gtk.FileChooserNative(title="Save File",
                                       action=Gtk.FileChooserAction.SAVE)
        dialog.set_current_name (suggested_filename)
        
        res = dialog.run()
        
        if (res == Gtk.ResponseType.ACCEPT):
            destination = 'file://' + dialog.get_filename()
            print (destination)
            download.set_destination(destination)
        
        dialog.destroy()


win = MyWindow()
win.set_title('Music Blocks')
URI = 'file://' + os.path.join(MUSICBLOCKS_PATH, 'index.html')
win.view.load_uri(URI)
win.connect("destroy", Gtk.main_quit)
win.show_all()
Gtk.main()
